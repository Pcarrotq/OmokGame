CREATE TABLE user_info (
    id VARCHAR2(50) PRIMARY KEY,        -- 아이디
    password VARCHAR2(100) NOT NULL,    -- 비밀번호
    name VARCHAR2(100) NOT NULL,        -- 이름
    nickname VARCHAR2(50) NOT NULL,     -- 닉네임
    email VARCHAR2(100) NOT NULL,       -- 이메일
    birth_year INT NOT NULL,            -- 생년
    birth_month INT NOT NULL,           -- 생월
    birth_day INT NOT NULL,             -- 생일
    gender CHAR(1) CHECK (gender IN ('M', 'F')), -- 성별 ('M' or 'F')
    phone_number VARCHAR2(20) NOT NULL, -- 전화번호
    postal_code VARCHAR2(10),           -- 우편번호
    address VARCHAR2(255),              -- 주소
    detailed_address VARCHAR2(255),     -- 상세 주소
    profile_image BLOB,                 -- 프로필 이미지 (BLOB 형태)
    CONSTRAINT chk_gender CHECK (gender IN ('M', 'F'))  -- 성별 유효성 검사
);

SELECT * FROM user_info;
SELECT id, password FROM user_info;
SELECT id, phone_number FROM user_info;
SELECT id, nickname FROM user_info;
SELECT id, address FROM user_info;
SELECT id, email, phone_number, name FROM user_info;

ALTER TABLE user_info ADD (isBlocked NUMBER(1));

ALTER TABLE user_info ADD status VARCHAR2(10) DEFAULT 'ACTIVE';
ALTER TABLE user_info ADD blocked_date TIMESTAMP;
ALTER TABLE user_info ADD deleted_date TIMESTAMP;

ALTER TABLE user_info ADD reason VARCHAR2(255);

UPDATE user_info SET isBlocked = 0 WHERE isBlocked IS NULL;

SELECT id, name, nickname, email, blocked_date AS blocked_date
FROM user_info
WHERE status = 'BLOCKED'

DROP TABLE user_info;


CREATE TABLE friend_info (
    userOrder NUMBER GENERATED BY DEFAULT AS IDENTITY,
    userId VARCHAR2(50) NOT NULL,
    friendId VARCHAR2(50) NOT NULL,
    PRIMARY KEY(userOrder),
    CONSTRAINT fk_userId FOREIGN KEY (userId) REFERENCES user_info (id),
    CONSTRAINT fk_friendId FOREIGN KEY (friendId) REFERENCES user_info (id)
);

INSERT INTO friend_info (userId, friendId) VALUES ('user1', 'user2');
INSERT INTO friend_info (userId, friendId) VALUES ('user1', 'user3');
INSERT INTO friend_info (userId, friendId) VALUES ('user2', 'user1');
INSERT INTO friend_info (userId, friendId) VALUES ('user3', 'user2');

SELECT * FROM friend_info;
SELECT userId FROM friend_info;

DROP TABLE friend_info;